import de.geeksfactory.opacclient.gradle.JsonFilesTask

apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "de.geeksfactory.opacclient"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 190
        versionName "5.4.1"
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        // disable 'AndroidLintRtlHardcoded' // Throws an "Unknown issue id" for me
        disable 'MissingTranslation'
        disable 'UnusedAttribute'
        warning 'InvalidPackage'
    }

    signingConfigs {
        release {
            storeFile file("../../release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "opac client"
            keyPassword System.getenv("KSTOREPWD")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.txt'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding 'UTF-8'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }

    useLibrary 'org.apache.http.legacy'

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation(project(':libopac')) {
        transitive = false
    }
    implementation 'io.sentry:sentry-android:1.7.4'
    implementation 'org.jsoup:jsoup:1.8.3'
    implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-rc01'
    implementation 'androidx.percentlayout:percentlayout:1.0.0-rc01'
    implementation 'androidx.appcompat:appcompat:1.0.0-rc01'
    implementation 'androidx.palette:palette:1.0.0-rc01'
    implementation 'androidx.cardview:cardview:1.0.0-rc01'
    implementation 'androidx.preference:preference:1.0.0-rc01'
    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'
    implementation 'joda-time:joda-time:2.8.2'
    implementation 'org.joda:joda-convert:1.8'
    implementation 'su.j2e:rv-joiner:1.0.6'
    implementation 'joda-time:joda-time:2.8.2'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.1.0'
    implementation 'com.samskivert:jmustache:1.13'
    implementation 'com.github.johan12345:material-intro:a7791652d9'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar'
    implementation 'com.evernote:android-job:1.2.0'
    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.6.0'
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.squareup.okhttp3:okhttp:3.10.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    testImplementation 'commons-io:commons-io:2.5'
    // We don't want to rely on the CommonsWare Maven repo, so we include these libraries as JARs
    implementation files('libs/adapter-1.0.1.jar')
    implementation files('libs/endless-1.2.3.jar')
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    jacocoClasspath = configurations['jacocoAnt']

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

task downloadJson(type: JsonFilesTask)

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn downloadJson
    }
}
